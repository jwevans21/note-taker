import type {
   GetServerSidePropsContext,
   GetServerSideProps,
   NextPage,
} from 'next';
import type { File, Folder } from '../utils/files.types';
import { withSessionSsr } from '../utils/withSession';

import React from 'react';
import Head from 'next/head';

import { FilesProvider } from '../utils/files-context';

import UserMenu from '../components/UserMenu';
import FileExplorer from '../components/FileExplorer';
import EditorArea from '../components/EditorArea';

import styles from '../styles/Home.module.scss';

type Data = {
   files: File[] | [];
   folders: Folder[] | [];
   name: string;
};

const Home: NextPage<Data> = ({ files, folders, name }) => {
   return (
      <FilesProvider
         initialState={{
            currentFile: null,
            files,
            folders,
         }}>
         <div className={styles.container}>
            <Head>
               <title>Note Taker</title>
               <meta
                  name='description'
                  content='Generated by create next app'
               />
               <link rel='icon' href='/favicon.ico' />
            </Head>
            <header className={styles.header}>
               <h1 className={styles.brand}>Note Taker</h1>

               <UserMenu name={name} />
            </header>
            <FileExplorer />
            <main className={styles.main}>
               <EditorArea />
            </main>
         </div>
      </FilesProvider>
   );
};

export const getServerSideProps: GetServerSideProps = withSessionSsr(
   async (context: GetServerSidePropsContext) => {
      const session = context.req.session || null;

      const user = session.user || null;

      if (!user) {
         return {
            redirect: {
               destination: '/login',
               permanent: false,
            },
         };
      }

      const data: Data = {
         folders: [
            {
               id: 'xiQzBcSVgS_m3V6aG38t5',
               name: 'Folder 1',
               files: [
                  {
                     id: '2ohdh-9d3ajRXcNyqaOgv',
                     name: 'File 1',
                     content: '# This is a markdown file with some content',
                     createdAt: new Date().toISOString(),
                     updatedAt: new Date().toISOString(),
                  },
               ],
               folders: [
                  {
                     id: 'DoJdOg1KfXMzHN32FPaWQ',
                     name: 'Folder 2',
                     files: [
                        {
                           id: 'bpjBkDi4HvfA6cGBZG4HL',
                           name: 'File 2',
                           content: '# This is a markdown file',
                           createdAt: new Date().toISOString(),
                           updatedAt: new Date().toISOString(),
                        },
                     ],
                     folders: [],
                     createdAt: new Date().toISOString(),
                     updatedAt: new Date().toISOString(),
                  },
               ],
               createdAt: new Date().toISOString(),
               updatedAt: new Date().toISOString(),
            },
         ],
         files: [
            {
               name: 'README.md',
               id: 'VP30xTMFNyqrhZUPUKw_K',
               createdAt: '2020-01-01T00:00:00.000Z',
               updatedAt: '2020-01-01T00:00:00.000Z',
               content: '# README.md',
            },
         ],
         name: user ? (user.name ? user.name : '') : '',
      };

      return {
         props: {
            files: data.files || [],
            folders: data.folders || [],
            name: data.name,
         },
      };
   }
);

export default Home;
