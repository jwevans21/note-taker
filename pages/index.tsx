import type {
   GetServerSidePropsContext,
   GetServerSideProps,
   NextPage,
} from 'next';
import type { File, Folder } from '../utils/files.types';
import type { Data } from '../utils/api/data.types';

import { withSessionSsr } from '../utils/withSession';

import React from 'react';
import Head from 'next/head';

import FilesProvider from '../utils/context/files-provider';

import UserMenu from '../components/UserMenu';
import FileExplorer from '../components/FileExplorer';
import EditorArea from '../components/EditorArea';

import styles from '../styles/Home.module.scss';
import { db } from '../utils/firebase-app';

type PageData = {
   files: Data['files'];
   folders: Data['folders'];
   createdAt: Data['createdAt'];
   updatedAt: Data['updatedAt'];
   name: string;
};

const Home: NextPage<PageData> = ({ files, folders, name }) => {
   return (
      <FilesProvider
         initialState={{
            currentFile: null,
            files,
            folders,
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString(),
         }}>
         <div className={styles.container}>
            <Head>
               <title>Note Taker</title>
               <meta
                  name='description'
                  content='Generated by create next app'
               />
               <link rel='icon' href='/favicon.ico' />
            </Head>
            <header className={styles.header}>
               <h1 className={styles.brand}>Note Taker</h1>

               <UserMenu name={name} />
            </header>
            <FileExplorer />
            <main className={styles.main}>
               <EditorArea />
            </main>
         </div>
      </FilesProvider>
   );
};

export const getServerSideProps: GetServerSideProps = withSessionSsr(
   async (context: GetServerSidePropsContext) => {
      const session = context.req.session || null;

      const user = session.user || null;

      if (!user) {
         return {
            redirect: {
               destination: '/login',
               permanent: false,
            },
         };
      }

      const data: PageData = {
         ...(((await (await db.collection('users').doc(user.id).get()).data()
            ?.data) as Data) || {
            files: [],
            folders: [],
            createdAt: new Date().toISOString(),
            updatedAt: new Date().toISOString(),
         }),
         name: user.name,
      };

      return {
         props: data,
      };
   }
);

export default Home;
